'use client'
import React, { useCallback, useEffect, useState } from 'react'
import { useParams, useRouter, usePathname, notFound } from 'next/navigation'
import ErrorPage from 'next/error'

import { Input } from '@/components/ui/input'
import { Trash2 } from 'lucide-react'
import { Pencil } from 'lucide-react'

import { toast } from '@/components/ui/use-toast'
import { zodResolver } from '@hookform/resolvers/zod'
import { useForm } from 'react-hook-form'
import { z } from 'zod'
import {
    Form,
    FormControl,
    FormDescription,
    FormField,
    FormItem,
    FormLabel,
    FormMessage,
} from '@/components/ui/form'
import {
    Dialog,
    DialogClose,
    DialogContent,
    DialogHeader,
    DialogTitle,
    DialogTrigger,
} from '@/components/ui/dialog'
import { Button } from '@/components/ui/button'
import { columns } from './columns'

import {
    getDeleteStudentStore,
    getStoreStudentData,
    useStudentData,
} from '@/store/store'
import MaxWidthWrapper from '@/components/MaxWidthWrapper'
import DeleteConfirmationModal from '../../_components/deleteModal'
import api from '@/utils/axios.config'
import { StudentData } from '../../(courseTabs)/students/page'
import useDebounce from '@/hooks/useDebounce'
import { DataTable } from '@/app/_components/datatable/data-table'

import { DataTablePagination } from '@/app/_components/datatable/data-table-pagination'
import BreadcrumbCmponent from '@/app/_components/breadcrumbCmponent'

const BatchesInfo = ({
    params,
}: {
    params: { courseId: string; batchId: string }
}) => {
    const router = useRouter()
    const param = useParams()
    const location = usePathname()

    const { studentsData, setStoreStudentData } = getStoreStudentData()
    const [studentData, setStudentData] = useState<StudentData[]>([])
    const [bootcamp, setBootcamp] = useState<any>([])
    const [search, setSearch] = useState('')
    const { setDeleteModalOpen, isDeleteModalOpen } = getDeleteStudentStore()
    const [instructorsInfo, setInstructorInfo] = useState<any>([])
    const [pages, setPages] = useState<number>()
    const [position, setPosition] = useState('10')
    const [offset, setOffset] = useState<number>(0)
    const [currentPage, setCurrentPage] = useState<number>(1)
    const [totalStudents, setTotalStudents] = useState<number>(0)
    const [lastPage, setLastPage] = useState<number>(0)
    const [formstudentData, setFormStudentData] = useState<any>({})
    const [firstBatchStudentId, setFirstBatchStudentId] = useState<any>()
    const [isFormOpen, setIsFormOpen] = useState(false)
    const debouncedValue = useDebounce(search, 1000)

    const crumbs = [
        {
            crumb: 'My Courses',
            href: `/admin/courses`,
            isLast: false,
        },
        {
            crumb: `${bootcamp?.name}`,
            href: `/admin/courses/${
                studentData.length > 0
                    ? studentData[0].bootcampId
                    : params.batchId
            }/batches`,
            isLast: false,
        },
        {
            crumb: `${
                studentData.length > 0
                    ? studentData[0].batchName
                    : instructorsInfo.name
            }`,
            isLast: true,
        },
    ]
    const formSchema = z.object({
        name: z.string().min(2, {
            message: 'Batch name must be at least 2 characters.',
        }),
        instructorId: z.string(),
        capEnrollment: z.string().refine(
            (capEnrollment) => {
                const capEnrollmentValue = parseInt(capEnrollment)
                return (
                    !isNaN(capEnrollmentValue) &&
                    capEnrollmentValue >= studentsData.length
                )
            },
            {
                message: `The cap enrollment must be greater than or equal to the number of students inside a batch there are currently ${studentsData.length} students  .`,
            }
        ),
    })
    const form = useForm<z.infer<typeof formSchema>>({
        resolver: zodResolver(formSchema),
        defaultValues: {
            name: instructorsInfo.name || '',
            instructorId: instructorsInfo.instructorId || '',
            capEnrollment: instructorsInfo.capEnrollment || '',
        },
        mode: 'onChange',
    })
    useEffect(() => {
        form.setValue('name', instructorsInfo?.name || '')
        form.setValue('instructorId', instructorsInfo?.instructorId || '')
        form.setValue('capEnrollment', instructorsInfo?.capEnrollment || '')
    }, [instructorsInfo, form])

    const toggleForm = () => {
        setIsFormOpen(!isFormOpen)
    }

    const fetchInstructorInfo = useCallback(
        async (batchId: string) => {
            if (batchId) {
                try {
                    const response = await api.get(`/batch/${batchId}`)
                    const batchData = response.data.batch
                    setInstructorInfo(batchData)
                    setFirstBatchStudentId(batchData.id)
                    setFormStudentData({
                        name: batchData.name,
                        instructorId: batchData.instructorId,
                        capEnrollment: batchData.capEnrollment,
                    })
                } catch (error: any) {
                    router.push('/not-found')
                    console.log(
                        'Error fetching instructor info:',
                        error.message
                    )
                }
            }
        },
        [setInstructorInfo, setFirstBatchStudentId, setFormStudentData, router]
    )
    useEffect(() => {
        fetchInstructorInfo(params.batchId)
    }, [isFormOpen, fetchInstructorInfo, params.batchId])
    useEffect(() => {
        if (params.batchId) {
            fetchInstructorInfo(params.batchId)
        }
    }, [params.batchId, router, fetchInstructorInfo])
    const batchDeleteHandler = async () => {
        try {
            await api.delete(`/batch/${params.batchId}`)
            toast({
                title: 'Batch Deleted Successfully',
                className: 'text-start capitalize',
            })
            setDeleteModalOpen(false)
            router.push(`/admin/courses/${params.courseId}/batches`)
        } catch (error) {
            toast({
                title: 'Batch not Deleted',
                className: 'text-start capitalize',
            })
            console.error('Error deleting batch:', error)
        }
    }

    const onSubmit = async (values: z.infer<typeof formSchema>) => {
        const convertedData = {
            ...values,
            name: values.name,
            instructorId: +values.instructorId,
            capEnrollment: +values.capEnrollment,
        }
        try {
            await api
                .patch(`/batch/${params.batchId}`, convertedData)
                .then((res) => {
                    toast({
                        title: res.data.status,
                        description: res.data.message,
                    })
                    const fetchBatchesInfo = async () => {
                        try {
                            const response = await api.get(
                                `/bootcamp/students/${params.courseId}?batch_id=${params.batchId}`
                            )
                            setStudentData(response.data.studentsEmails)
                            //   }
                        } catch (error) {}
                    }
                    fetchBatchesInfo()
                })
            //   }
        } catch (error) {
            toast({
                title: "Batches Didn't Update Succesfully",
            })
        }
    }
    useEffect(() => {
        const getBootCamp = async () => {
            await api
                .get(`/bootcamp/${params.courseId}`)
                .then((response) => setBootcamp(response.data.bootcamp))
        }
        getBootCamp()
    }, [params.courseId])

    const fetchStudentData = useCallback(
        async (offset: number) => {
            await api
                .get(
                    `/bootcamp/students/${params.courseId}?batch_id=${params.batchId}&limit=${position}&offset=${offset}`
                )
                .then((response) => {
                    setStudentData(response.data.studentsEmails)
                    setStoreStudentData(response.data.studentsEmails)
                    setLastPage(response.data.totalPages)
                    setPages(response.data.totalPages)
                    setTotalStudents(response.data.totalStudents)
                })
        },
        [
            params,
            position,
            setStudentData,
            setStoreStudentData,
            setLastPage,
            setPages,
            setTotalStudents,
        ]
    )
    useEffect(() => {
        fetchStudentData(offset)
    }, [offset, position, fetchStudentData])
    useEffect(() => {
        const searchBatchStudentsHandler = async () => {
            await api
                .get(
                    `/bootcamp/studentSearch/${params.courseId}?batch_id=${params.batchId}&searchTerm=${debouncedValue}`
                )
                .then((res) => {
                    setStoreStudentData(res.data.data[1].studentsEmails)
                })
        }

        if (debouncedValue) searchBatchStudentsHandler()
        if (debouncedValue?.trim().length === 0) fetchStudentData(0)
    }, [
        debouncedValue,
        fetchStudentData,
        params.batchId,
        params.courseId,
        setStoreStudentData,
    ])

    const handleSetSearch = (e: React.ChangeEvent<HTMLInputElement>) => {
        setSearch(e.target.value)
    }

    return (
        <>
            <BreadcrumbCmponent crumbs={crumbs} />

            <MaxWidthWrapper className="p-4 ">
                <div className="flex justify-between">
                    <div className="w-1/2 flex flex-col items-start ">
                        <div className=" flex flex-col ">
                            <h1 className="capitalize text-start text-[30px] font-semibold">
                                {studentData.length > 0
                                    ? studentData[0].batchName
                                    : ''}
                            </h1>
                            <div className="flex gap-x-2">
                                <svg
                                    width="25"
                                    height="24"
                                    viewBox="0 0 25 24"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <g clipPath="url(#clip0_20522_2234)">
                                        <path
                                            d="M18.8612 11.0575C18.8612 11.0575 18.8367 10.9928 18.8366 10.9923L18.8374 10.9919C18.8336 10.98 18.0022 8.32771 17.9981 8.31477V8.31496C17.187 5.86471 16.2833 6.05267 16.2833 6.05267L16.2834 6.05305C16.0104 6.01058 15.7504 6.11492 15.6246 6.15299H15.5906C15.6338 6.66017 15.4158 7.16155 15.1183 7.50711C13.718 9.48589 10.8828 9.84683 10.8828 9.84683C10.8828 9.84683 10.425 9.90777 10.1914 9.92577C7.94843 10.098 6.57799 9.36036 5.77118 8.59161C4.94909 9.94845 4.58327 11.0576 4.58327 11.0576C3.99415 12.7091 3.72452 14.7043 4.88618 16.2434L4.88552 16.2446C5.74484 17.3518 7.78165 18.6467 10.3698 19.0219L10.3691 19.0212C10.6272 19.06 10.8941 19.0886 11.1681 19.106V19.1077C11.503 19.1287 11.9235 19.1299 12.2763 19.1077V19.106C12.5502 19.0886 12.8171 19.06 13.0752 19.0212L13.0746 19.0219C15.115 18.7261 17.4458 17.6788 18.5589 16.2446L18.5582 16.2434C19.72 14.7042 19.4503 12.709 18.8612 11.0575Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M11.7218 19.3114C11.5275 19.3114 11.3331 19.3058 11.1561 19.2948C11.1472 19.2942 11.1385 19.293 11.13 19.2913C10.869 19.2741 10.6088 19.2464 10.356 19.2088C10.3516 19.2085 10.3471 19.2081 10.3426 19.2074C7.69976 18.8243 5.62292 17.501 4.73707 16.3595C4.7321 16.3531 4.72751 16.3463 4.72348 16.3395C3.73892 15.0207 3.62914 13.1732 4.40623 10.9946L4.40914 10.9957C4.43585 10.8846 4.51376 10.6793 4.69648 10.2587C4.87601 9.84572 5.18023 9.20438 5.61035 8.4946C5.63979 8.44594 5.68967 8.41341 5.74592 8.40591C5.80235 8.3986 5.85898 8.41688 5.90004 8.45606C6.61404 9.13622 7.93573 9.91116 10.1765 9.73903C10.4024 9.72169 10.8531 9.66188 10.8576 9.66122C10.8861 9.65756 13.6299 9.28538 14.9647 7.39903C14.9682 7.39416 14.9719 7.38947 14.9757 7.38497C15.2784 7.0335 15.4383 6.579 15.4033 6.16913C15.3989 6.11681 15.4166 6.06506 15.4521 6.02634C15.4876 5.98772 15.5377 5.96569 15.5902 5.96569H15.5956C15.6038 5.96306 15.6126 5.96016 15.6216 5.95725C15.7689 5.90925 16.0114 5.82994 16.2818 5.86378C16.4946 5.84185 17.3953 5.90391 18.1733 8.24878C18.1747 8.25225 18.1759 8.25572 18.177 8.25928C18.1844 8.28309 19.0102 10.9172 19.0159 10.9358C19.0169 10.9388 19.0178 10.9417 19.0185 10.9447L19.0363 10.9915C19.0367 10.9927 19.0371 10.9937 19.0375 10.9948C19.8146 13.1733 19.7047 15.0209 18.7203 16.3397C18.7162 16.3466 18.7116 16.3533 18.7067 16.3597C17.4772 17.9438 15.0054 18.9315 13.1012 19.2076C13.0967 19.2083 13.0922 19.2087 13.0878 19.209C12.8347 19.2466 12.5745 19.2743 12.3135 19.2915C12.305 19.2933 12.2964 19.2944 12.2876 19.295C12.1105 19.3058 11.9161 19.3114 11.7218 19.3114ZM11.2049 18.922C11.5264 18.941 11.9175 18.941 12.2391 18.922C12.2473 18.9203 12.2556 18.9193 12.2642 18.9188C12.5283 18.9021 12.7917 18.874 13.0472 18.8357C13.0522 18.8349 13.0572 18.8344 13.0622 18.834C15.2128 18.5186 17.4011 17.4158 18.398 16.1454C18.4011 16.1402 18.4046 16.1352 18.4083 16.1303C19.3377 14.8989 19.4307 13.214 18.6848 11.122C18.6807 11.111 18.6586 11.0521 18.6584 11.0515C18.6561 11.0445 18.6542 11.0375 18.6527 11.0303C18.582 10.805 17.8692 8.53134 17.8212 8.37825C17.8207 8.37675 17.8202 8.37534 17.8197 8.37384C17.1153 6.246 16.3786 6.23456 16.318 6.23709C16.2973 6.24113 16.2754 6.24169 16.254 6.23822C16.0819 6.2115 15.9094 6.25856 15.7828 6.29888C15.7776 6.75844 15.5905 7.24219 15.2657 7.62253C13.8327 9.63919 11.0249 10.0177 10.9059 10.0328C10.8881 10.0351 10.4413 10.0944 10.2051 10.1126C7.99517 10.282 6.61582 9.57328 5.81454 8.88422C5.0952 10.1157 4.76398 11.1059 4.7606 11.1162C4.01276 13.2131 4.10557 14.8987 5.0352 16.1303C5.03895 16.1351 5.04232 16.1402 5.04542 16.1453C5.89048 17.2216 7.86157 18.465 10.3815 18.8341C10.3864 18.8344 10.3914 18.8349 10.3965 18.8357C10.6519 18.874 10.9153 18.9021 11.1795 18.9188C11.1883 18.9193 11.1967 18.9204 11.2049 18.922Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M14.9833 18.1918C14.1011 18.1918 14.1306 18.1915 14.1306 18.1915L14.1303 18.1918H8.55669C7.08425 18.1918 5.89062 19.3855 5.89062 20.8579C5.89062 21.7598 5.89062 22.3747 5.89062 23.2784H17.6494C17.6494 22.3758 17.6494 21.76 17.6494 20.8579C17.6494 19.3856 16.4558 18.1918 14.9833 18.1918Z"
                                            fill="#6BDDDD"
                                        />
                                        <path
                                            d="M17.6496 23.4661H5.89062C5.78713 23.4661 5.70312 23.3821 5.70312 23.2786V20.858C5.70312 19.2845 6.98328 18.0045 8.55669 18.0045H14.1233C14.1266 18.0044 14.1297 18.0045 14.133 18.0044V18.0042C14.1408 18.0042 14.2209 18.0045 14.9833 18.0045C16.5568 18.0045 17.8368 19.2846 17.8368 20.858V23.2786C17.8371 23.3821 17.7531 23.4661 17.6496 23.4661ZM6.07812 23.0911H17.462V20.858C17.462 19.4913 16.3501 18.3795 14.9834 18.3795L14.2468 18.3793C14.218 18.3793 14.1877 18.3793 14.1579 18.3774C14.1488 18.3788 14.1397 18.3795 14.1304 18.3795H8.55678C7.19009 18.3795 6.07822 19.4913 6.07822 20.858V23.0911H6.07812Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M14.147 18.1919C13.5685 18.1919 9.9752 18.1919 9.39648 18.1919C9.39648 19.2639 9.76933 20.2301 10.4214 20.9885C11.0234 21.6886 11.8747 21.6083 11.7717 21.6083C13.2703 21.6083 14.147 19.6974 14.147 18.1919Z"
                                            fill="#E0EBFC"
                                        />
                                        <path
                                            d="M11.7715 19.1076L13.203 20.8606C13.4039 21.1066 13.7783 21.1109 13.9848 20.8697L16.1604 18.4649C15.485 18.1325 14.9413 18.192 14.1426 18.192L11.7715 19.1076Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M11.7678 19.1076L10.3363 20.8606C10.1354 21.1066 9.761 21.111 9.55447 20.8697L7.37891 18.4649C8.04753 18.1359 8.55856 18.1921 9.39669 18.1921L11.7678 19.1076Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M16.8811 10.6712C15.9626 10.0099 15.0117 9.48152 14.8237 8.03739L14.7869 7.91608C13.3156 9.5357 10.8825 9.84677 10.8825 9.84677C10.8825 9.84677 10.4247 9.9077 10.1911 9.9257C8.67564 10.042 7.5588 9.74242 6.7442 9.29889C6.64933 9.82623 6.6632 10.1483 6.6632 10.6713C6.65233 10.6711 6.64183 10.6697 6.63095 10.6697C5.77014 10.6697 5.07227 11.3612 5.07227 12.2143C5.07227 13.1265 5.86848 13.848 6.7982 13.7498C7.32536 15.9896 9.35149 17.6586 11.7722 17.6586C14.1929 17.6586 16.219 15.9896 16.7462 13.7498C17.6749 13.8479 18.472 13.1275 18.472 12.2143C18.472 11.3355 17.7365 10.6485 16.8811 10.6712Z"
                                            fill="#F9CFCF"
                                        />
                                        <path
                                            d="M11.7722 17.846C9.3512 17.846 7.26892 16.2502 6.65411 13.9457C6.21555 13.9512 5.78561 13.7921 5.45795 13.4972C5.09373 13.1695 4.88477 12.7017 4.88477 12.2141C4.88477 11.311 5.58508 10.5671 6.47533 10.4889C6.47392 10.0582 6.47336 9.74533 6.5597 9.26552C6.57039 9.20627 6.60883 9.15564 6.6632 9.12967C6.71748 9.10361 6.78105 9.1052 6.83392 9.13408C7.7537 9.63489 8.87823 9.83842 10.1768 9.73867C10.4025 9.72133 10.8533 9.66142 10.8579 9.66086C10.8824 9.65767 13.2423 9.33761 14.6483 7.78989C14.6936 7.73983 14.7625 7.71827 14.8284 7.73308C14.8942 7.74798 14.947 7.79711 14.9665 7.8617L15.0033 7.98302C15.0063 7.99286 15.0085 8.00289 15.0098 8.01311C15.1689 9.2357 15.8886 9.74205 16.7219 10.3285C16.7948 10.3796 16.868 10.4311 16.9409 10.4833C17.3842 10.4885 17.8169 10.6671 18.1373 10.979C18.4742 11.3071 18.6597 11.7458 18.6597 12.2142C18.6597 12.7018 18.4509 13.1695 18.0867 13.4972C17.7644 13.7872 17.3446 13.946 16.9123 13.946C16.905 13.946 16.8977 13.946 16.8905 13.9459C16.2755 16.2502 14.1932 17.846 11.7722 17.846ZM6.79839 13.5622C6.88445 13.5622 6.96067 13.6213 6.98073 13.7067C7.50245 15.9231 9.4728 17.471 11.7722 17.471C14.0717 17.471 16.042 15.9231 16.5636 13.7067C16.5852 13.6148 16.672 13.5527 16.7658 13.5632C17.1569 13.6046 17.5464 13.4788 17.8357 13.2184C18.121 12.9617 18.2845 12.5956 18.2845 12.2142C18.2845 11.8479 18.1392 11.5045 17.8754 11.2476C17.6116 10.9907 17.2536 10.8494 16.886 10.8587C16.8459 10.8603 16.8048 10.8474 16.7714 10.8235C16.683 10.7598 16.5942 10.6974 16.5059 10.6352C15.7248 10.0855 14.9185 9.51817 14.6762 8.29727C13.1719 9.72808 11.0029 10.0204 10.9062 10.0328C10.8883 10.0351 10.4415 10.0945 10.2054 10.1126C8.94077 10.2097 7.82711 10.0317 6.88961 9.58361C6.84836 9.90414 6.84911 10.1623 6.85023 10.4944L6.85061 10.6712C6.85061 10.7216 6.83036 10.7699 6.79427 10.8052C6.75817 10.8404 6.70998 10.8604 6.65917 10.8586C6.6512 10.8584 6.64323 10.858 6.63536 10.8574C6.63517 10.8574 6.63489 10.8574 6.6347 10.8574C5.87439 10.8574 5.25967 11.466 5.25967 12.2141C5.25967 12.5956 5.42336 12.9617 5.70873 13.2185C5.99795 13.4788 6.38814 13.6047 6.77842 13.5631C6.78517 13.5625 6.79183 13.5622 6.79839 13.5622Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M11.7729 15.48C11.4252 15.48 11.1016 15.3548 10.8851 15.1366C10.7211 14.9713 10.6309 14.7629 10.6309 14.5497C10.6309 14.4462 10.7149 14.3622 10.8184 14.3622C10.9219 14.3622 11.0059 14.4462 11.0059 14.5497C11.0059 14.6649 11.0562 14.7765 11.1513 14.8724C11.2957 15.018 11.5281 15.1049 11.7729 15.1049C12.0193 15.1049 12.2448 15.0202 12.3913 14.8724C12.4865 14.7765 12.5368 14.6648 12.5368 14.5497C12.5368 14.4462 12.6208 14.3622 12.7243 14.3622C12.8278 14.3622 12.9118 14.4462 12.9118 14.5497C12.9118 14.7628 12.8215 14.9713 12.6575 15.1366C12.441 15.3548 12.1186 15.48 11.7729 15.48Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M3.45062 16.4718L2.86328 16.5458L1.53165 5.98481C1.51121 5.82262 1.62615 5.67449 1.78834 5.65406C1.95053 5.63362 2.09865 5.74856 2.11909 5.91074L3.45062 16.4718Z"
                                            fill="#E0EBFC"
                                        />
                                        <path
                                            d="M1.98816 14.8005C1.64794 14.8449 1.40813 15.1567 1.45257 15.4969L1.82372 18.3402C1.86816 18.6804 2.17988 18.9202 2.5201 18.8758L5.22366 18.5229C5.56388 18.4785 5.80369 18.1668 5.75925 17.8266L5.3881 14.9832C5.37066 14.8497 5.31169 14.7322 5.22638 14.6407L5.244 14.6234L4.09407 13.4492C3.95222 13.3044 3.71841 13.2957 3.5716 13.4355C3.24188 13.7496 3.22782 14.2666 3.53157 14.5991L1.98816 14.8005Z"
                                            fill="#F9CFCF"
                                        />
                                        <path
                                            d="M2.43765 19.0686C2.26056 19.0686 2.08927 19.0106 1.94659 18.9009C1.77549 18.7692 1.66581 18.5788 1.63787 18.3647L1.26662 15.5206C1.20896 15.0787 1.52152 14.6722 1.96356 14.6144L3.1644 14.4577C3.37843 14.43 3.59059 14.4868 3.76177 14.6185C3.93296 14.7501 4.04256 14.9405 4.07049 15.1546L4.44174 17.9987C4.4994 18.4406 4.18674 18.8471 3.7449 18.9048L2.54396 19.0616C2.50843 19.0663 2.4729 19.0686 2.43765 19.0686ZM3.72062 18.719H3.72156H3.72062ZM3.26987 14.8259C3.25093 14.8259 3.2319 14.8271 3.21287 14.8297L2.01202 14.9864C1.89727 15.0014 1.79518 15.0602 1.72468 15.1519C1.65418 15.2436 1.62352 15.3574 1.63852 15.4721L2.00977 18.3162C2.02477 18.431 2.08356 18.5331 2.17524 18.6036C2.26702 18.6742 2.38102 18.7051 2.49549 18.6897L3.69643 18.533C3.93334 18.5021 4.10087 18.2842 4.06993 18.0473L3.69868 15.2032C3.68368 15.0884 3.6249 14.9863 3.53321 14.9158C3.45662 14.857 3.36474 14.8259 3.26987 14.8259Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M2.4381 19.0687C2.26091 19.0687 2.08963 19.0107 1.94675 18.9008C1.77547 18.7691 1.66578 18.5786 1.63785 18.3644L1.26669 15.5211C1.23875 15.3068 1.29594 15.0946 1.42757 14.9234C1.55928 14.7522 1.74978 14.6424 1.964 14.6145L3.21463 14.4512C3.04653 14.0683 3.12519 13.6016 3.44235 13.2996C3.66135 13.0911 4.01394 13.0992 4.22807 13.3178L5.3781 14.492C5.40594 14.5205 5.423 14.5555 5.4291 14.5921C5.5071 14.7002 5.55678 14.8252 5.57422 14.9587L5.94538 17.8021C5.97332 18.0163 5.91613 18.2286 5.7845 18.3998C5.65278 18.571 5.46228 18.6807 5.24807 18.7087L2.5445 19.0616C2.50888 19.0664 2.47335 19.0687 2.4381 19.0687ZM3.82382 13.5228C3.7791 13.5228 3.73494 13.5388 3.70091 13.5712C3.449 13.8112 3.43513 14.2156 3.66997 14.4726C3.71713 14.5242 3.73166 14.5977 3.70766 14.6634C3.68366 14.7291 3.62516 14.7759 3.55578 14.785L2.01247 14.9865C1.77538 15.0174 1.60757 15.2355 1.6386 15.4727L2.00975 18.316C2.02475 18.4309 2.08353 18.5331 2.17541 18.6037C2.26719 18.6743 2.381 18.7052 2.49594 18.6899L5.1995 18.3369C5.31444 18.3219 5.41653 18.2632 5.48713 18.1713C5.55772 18.0794 5.58838 17.9656 5.57338 17.8508L5.20222 15.0074C5.1905 14.9177 5.15141 14.8351 5.08925 14.7684C5.06732 14.745 5.0526 14.7172 5.045 14.6882L3.96003 13.5803C3.92263 13.5421 3.87294 13.5228 3.82382 13.5228ZM1.98819 14.8005H1.98913H1.98819Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M8.84743 14.4053C8.24706 14.4053 7.82143 14.2808 7.558 14.0305C7.55546 14.0281 7.55284 14.0255 7.5504 14.0228C7.30431 13.7605 7.1379 13.4369 7.06909 13.0868C7.0344 12.9109 7.02484 12.7311 7.0405 12.5525L7.16387 11.1423C7.17371 11.0301 7.22659 10.9283 7.31284 10.856C7.39918 10.7836 7.50878 10.7495 7.62071 10.7589L11.0991 11.0632C11.4232 11.0916 11.6638 11.3783 11.6355 11.7024L11.5636 12.5245C11.4971 13.2847 10.9776 14.1279 9.96728 14.2979C9.5424 14.3694 9.16975 14.4053 8.84743 14.4053ZM7.82012 13.7622C8.035 13.9627 8.57134 14.1525 9.90503 13.9282C10.7178 13.7914 11.1362 13.1082 11.1901 12.4919L11.262 11.6698C11.2723 11.5517 11.1846 11.4472 11.0665 11.4368L7.588 11.1325C7.57234 11.1319 7.56071 11.1377 7.55396 11.1433C7.54721 11.149 7.53878 11.1591 7.53737 11.1751L7.414 12.5853C7.40143 12.7287 7.40921 12.8732 7.43706 13.0147C7.4919 13.2937 7.62437 13.5521 7.82012 13.7622ZM7.22725 12.5689H7.22818H7.22725Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M14.6832 14.4152C14.279 14.4152 13.8806 14.3482 13.5728 14.2963C12.6978 14.149 12.0564 13.4364 11.9765 12.5229L11.9046 11.7008C11.8763 11.3766 12.1169 11.0899 12.441 11.0616L15.9195 10.7573C16.0308 10.7475 16.1408 10.7819 16.2271 10.8543C16.3135 10.9267 16.3664 11.0284 16.3762 11.1406L16.4996 12.5508C16.5152 12.7294 16.5056 12.9092 16.4709 13.0853C16.2582 14.167 15.4603 14.4151 14.6832 14.4152ZM15.9564 11.1307C15.9549 11.1307 15.9536 11.1308 15.952 11.1309L12.4736 11.4352C12.4164 11.4402 12.3645 11.4671 12.3276 11.5112C12.2907 11.5552 12.2731 11.611 12.2781 11.6681L12.35 12.4902C12.4148 13.2309 12.9312 13.8081 13.635 13.9266C15.0381 14.1627 15.8913 14.0888 16.103 13.0129C16.1308 12.8715 16.1385 12.7271 16.126 12.5835L16.0026 11.1733C16.0012 11.1574 15.9929 11.1473 15.9861 11.1416C15.98 11.1365 15.9701 11.1307 15.9564 11.1307Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M12.5349 12.0457H11.002C10.8985 12.0457 10.8145 11.9617 10.8145 11.8582C10.8145 11.7547 10.8985 11.6707 11.002 11.6707H12.5349C12.6384 11.6707 12.7224 11.7547 12.7224 11.8582C12.7224 11.9617 12.6384 12.0457 12.5349 12.0457Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M15.0205 5.0421C14.0821 4.23154 12.0936 3.01635 9.32626 3.99791C8.12645 4.48616 6.4802 5.62429 5.4707 8.27638C6.21902 9.14132 7.64167 10.1214 10.1915 9.92563C10.4251 9.90772 10.8829 9.84669 10.8829 9.84669C10.8829 9.84669 13.7181 9.48575 15.1184 7.50697C15.3091 7.28554 15.4444 7.02904 15.5274 6.75688C15.7166 6.13616 15.5118 5.46641 15.0205 5.0421Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M15.1015 11.4697H14.3222C14.0153 11.4697 13.7656 11.7194 13.7656 12.0263V12.9539C13.7656 13.2609 14.0153 13.5105 14.3222 13.5105C14.6291 13.5105 14.8788 13.2609 14.8788 12.9539V12.0263C14.8788 11.9775 14.8719 11.9304 14.8601 11.8854H15.1016C15.2164 11.8854 15.3094 11.7924 15.3094 11.6776C15.3093 11.5628 15.2162 11.4697 15.1015 11.4697Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M9.24686 11.4709V11.4697H8.46761C8.35277 11.4697 8.25977 11.5628 8.25977 11.6775C8.25977 11.7924 8.35286 11.8854 8.46761 11.8854H8.68558C8.67377 11.9304 8.66683 11.9775 8.66683 12.0262V12.9538C8.66683 13.2608 8.91648 13.5104 9.22342 13.5104C9.53027 13.5104 9.78002 13.2608 9.78002 12.9538V12.0262C9.78002 11.7273 9.54283 11.4833 9.24686 11.4709Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M6.29378 19.4263C6.27034 19.2403 6.10037 19.1083 5.91428 19.1318L2.71328 19.5354C2.52709 19.5588 2.39528 19.7288 2.41871 19.9149L2.84284 23.2785H6.7795L6.29378 19.4263Z"
                                            fill="#6BDDDD"
                                        />
                                        <path
                                            d="M6.77947 23.4661H2.84282C2.74832 23.4661 2.66863 23.3958 2.65682 23.302L2.2327 19.9384C2.19632 19.6501 2.40135 19.3858 2.68973 19.3494L5.89082 18.9458C6.03023 18.9283 6.16869 18.9661 6.27997 19.0524C6.39126 19.1388 6.46222 19.2633 6.47976 19.4029L6.96547 23.2551C6.97222 23.3085 6.95572 23.3622 6.9201 23.4026C6.88457 23.4429 6.83329 23.4661 6.77947 23.4661ZM3.0082 23.0911H6.56685L6.10776 19.4498C6.10269 19.4095 6.08226 19.3736 6.0501 19.3486C6.01804 19.3236 5.97801 19.3128 5.93779 19.3178L2.73679 19.7214C2.65354 19.7319 2.59429 19.8082 2.60488 19.8914L3.0082 23.0911Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M19.976 0.721344H19.7298C17.5038 0.721344 15.6992 2.52594 15.6992 4.75194C15.6992 6.08066 16.3424 7.25891 17.3342 7.99316L17.2034 9.3725C17.1824 9.59385 17.4177 9.74844 17.6126 9.64119L19.2311 8.75066C19.3946 8.77081 19.5608 8.78253 19.7298 8.78253H19.976C22.202 8.78253 24.0066 6.97794 24.0066 4.75194C24.0066 2.52594 22.202 0.721344 19.976 0.721344Z"
                                            fill="#A4C9FF"
                                        />
                                        <path
                                            d="M17.479 9.86322C17.3901 9.86322 17.3014 9.83762 17.2241 9.78681C17.0799 9.69212 17.0004 9.52665 17.0167 9.3549L17.1377 8.07934C16.1176 7.28303 15.5117 6.04731 15.5117 4.75206C15.5117 2.42622 17.404 0.533966 19.7297 0.533966H19.9759C22.3018 0.533966 24.1939 2.42622 24.1939 4.75206C24.1939 7.0779 22.3017 8.97015 19.9759 8.97015H19.7297C19.579 8.97015 19.4276 8.96162 19.2688 8.94409L17.7028 9.80565C17.6328 9.84409 17.5558 9.86322 17.479 9.86322ZM19.7297 0.908872C17.6106 0.908872 15.8867 2.63293 15.8867 4.75197C15.8867 5.96443 16.4696 7.11972 17.4458 7.84243C17.4986 7.88153 17.5271 7.94547 17.5209 8.01081L17.39 9.39015C17.3854 9.43853 17.4163 9.4644 17.4299 9.47331C17.4434 9.48212 17.4797 9.50022 17.5221 9.47697L19.1407 8.58643C19.1752 8.5674 19.2148 8.55981 19.254 8.56468C19.4198 8.58512 19.5753 8.59506 19.7297 8.59506H19.9759C22.095 8.59506 23.8189 6.87109 23.8189 4.75197C23.8189 2.63284 22.095 0.908872 19.9759 0.908872H19.7297Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M18.1067 6.76659C17.7334 6.76659 17.4648 6.66018 17.3299 6.4588C17.2366 6.31921 17.2114 6.14296 17.2553 5.93474C17.3872 5.30915 18.1198 4.49436 19.1216 3.85902C19.964 3.32474 20.8569 3.00571 21.5102 3.00571C21.8835 3.00571 22.1521 3.11211 22.2869 3.31349C22.3803 3.45308 22.4054 3.62943 22.3615 3.83755C22.2296 4.46315 21.497 5.27793 20.4952 5.91327C19.6528 6.44755 18.7599 6.76659 18.1068 6.76659C18.1068 6.76659 18.1068 6.76659 18.1067 6.76659ZM21.504 3.24824C20.8983 3.24824 20.0577 3.55199 19.2554 4.06086C18.1786 4.74383 17.5984 5.51549 17.5009 5.9774C17.4705 6.12196 17.4839 6.2384 17.5409 6.32362C17.6274 6.4528 17.8306 6.52396 18.113 6.52396C18.7188 6.52396 19.5593 6.22021 20.3616 5.71133C21.4384 5.02837 22.0188 4.25661 22.1162 3.7948C22.1466 3.65024 22.1332 3.5338 22.0762 3.44858C21.9896 3.31939 21.7864 3.24824 21.504 3.24824Z"
                                            fill="#E0EBFC"
                                        />
                                        <path
                                            d="M21.5102 6.76659C19.9643 6.76649 17.5165 5.0759 17.2553 3.83755C17.2115 3.62933 17.2365 3.45299 17.33 3.31349C17.4647 3.11211 17.7333 3.00571 18.1067 3.00571C18.7599 3.00571 19.6528 3.32464 20.4952 3.85902C21.4971 4.49436 22.2296 5.30915 22.3615 5.93474C22.4054 6.14296 22.3804 6.3193 22.2869 6.4588C22.1521 6.66018 21.8835 6.76659 21.5102 6.76659ZM18.1129 3.24824C17.8304 3.24824 17.6272 3.31939 17.5407 3.44858C17.4837 3.53371 17.4703 3.65024 17.5008 3.7948C17.7323 4.89252 20.0546 6.52396 21.5038 6.52396C21.7863 6.52396 21.9894 6.4528 22.076 6.32362C22.133 6.23849 22.1464 6.12196 22.1159 5.9774C22.0185 5.51549 21.4382 4.74383 20.3615 4.06086C19.5592 3.55208 18.7186 3.24824 18.1129 3.24824Z"
                                            fill="#E0EBFC"
                                        />
                                        <path
                                            d="M19.8092 5.46371C20.1007 5.46371 20.3371 5.22736 20.3371 4.9358C20.3371 4.64425 20.1007 4.4079 19.8092 4.4079C19.5176 4.4079 19.2812 4.64425 19.2812 4.9358C19.2812 5.22736 19.5176 5.46371 19.8092 5.46371Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M19.8093 7.76652C19.4692 7.76652 19.1513 7.46418 18.9142 6.91518C18.6799 6.37283 18.5508 5.65218 18.5508 4.88614C18.5508 4.12011 18.6799 3.39946 18.9142 2.85711C19.1513 2.30811 19.4692 2.00577 19.8093 2.00577C20.1493 2.00577 20.4672 2.30811 20.7044 2.85711C20.9387 3.39946 21.0678 4.12011 21.0678 4.88614C21.0678 5.65218 20.9387 6.37283 20.7044 6.91518C20.4673 7.46418 20.1494 7.76652 19.8093 7.76652ZM19.8094 2.25242C19.5758 2.25242 19.3217 2.52402 19.1295 2.97899C18.9149 3.48692 18.7967 4.16427 18.7967 4.88614C18.7967 5.60802 18.9149 6.28527 19.1295 6.7933C19.3217 7.24827 19.5758 7.51987 19.8094 7.51987C20.0429 7.51987 20.2971 7.24827 20.4893 6.7933C20.7038 6.28527 20.8221 5.60802 20.8221 4.88614C20.8221 4.16427 20.7038 3.48702 20.4893 2.97899C20.2971 2.52402 20.0429 2.25242 19.8094 2.25242Z"
                                            fill="#E0EBFC"
                                        />
                                        <path
                                            d="M19.808 2.57331C20.0579 2.57331 20.2605 2.3707 20.2605 2.12077C20.2605 1.87085 20.0579 1.66824 19.808 1.66824C19.5581 1.66824 19.3555 1.87085 19.3555 2.12077C19.3555 2.3707 19.5581 2.57331 19.808 2.57331Z"
                                            fill="#F9A7A7"
                                        />
                                        <path
                                            d="M22.2533 6.7952C22.5032 6.7952 22.7058 6.59259 22.7058 6.34267C22.7058 6.09274 22.5032 5.89014 22.2533 5.89014C22.0034 5.89014 21.8008 6.09274 21.8008 6.34267C21.8008 6.59259 22.0034 6.7952 22.2533 6.7952Z"
                                            fill="#EAA97D"
                                        />
                                        <path
                                            d="M17.4506 6.7952C17.7005 6.7952 17.9031 6.59259 17.9031 6.34267C17.9031 6.09274 17.7005 5.89014 17.4506 5.89014C17.2007 5.89014 16.998 6.09274 16.998 6.34267C16.998 6.59259 17.2007 6.7952 17.4506 6.7952Z"
                                            fill="#FFEA92"
                                        />
                                        <path
                                            d="M9.54771 10.1385C7.32471 10.1386 6.03461 9.21498 5.32886 8.39917C5.28377 8.34695 5.27093 8.2742 5.29549 8.20979C6.32805 5.49695 8.01893 4.3276 9.25558 3.82426C12.1196 2.80838 14.1731 4.06257 15.1432 4.90023C15.6942 5.37629 15.9155 6.12657 15.7068 6.8117C15.614 7.11638 15.4658 7.3892 15.2665 7.62254C13.8335 9.6392 11.0257 10.0176 10.9067 10.0328C10.8889 10.0351 10.4421 10.0945 10.2059 10.1126C9.97793 10.1302 9.75846 10.1385 9.54771 10.1385ZM5.68671 8.23754C6.42218 9.04407 7.78558 9.92307 10.177 9.73885C10.4028 9.72151 10.8535 9.6616 10.8581 9.66104C10.8866 9.65738 13.6303 9.2852 14.9652 7.39885C14.9687 7.39398 14.9724 7.38929 14.9762 7.38479C15.1444 7.18951 15.2694 6.96001 15.3479 6.70248C15.5135 6.15929 15.3368 5.56323 14.8978 5.1842C13.9895 4.3996 12.0659 3.22529 9.3888 4.17479C8.24505 4.64045 6.67427 5.72616 5.68671 8.23754Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M5.5913 19.1728L5.49276 18.4181C5.41467 18.4714 5.32486 18.5098 5.22464 18.523L2.79492 18.8401L2.88295 19.5144L5.5913 19.1728Z"
                                            fill="#F9CFCF"
                                        />
                                        <path
                                            d="M2.88077 19.7017C2.78796 19.7017 2.70743 19.6329 2.69505 19.5385L2.60702 18.8642C2.60065 18.8149 2.61405 18.765 2.64433 18.7257C2.67462 18.6863 2.71943 18.6605 2.76874 18.654L5.19846 18.3369C5.26305 18.3284 5.32587 18.3037 5.38502 18.2632C5.43883 18.2263 5.50802 18.2202 5.56737 18.2468C5.6269 18.2734 5.66833 18.329 5.67677 18.3937L5.7753 19.1484C5.78177 19.1978 5.76818 19.2478 5.73771 19.2872C5.70724 19.3266 5.66224 19.3524 5.61274 19.3587L2.9043 19.7002C2.89652 19.7012 2.88865 19.7017 2.88077 19.7017ZM3.00321 19.0017L3.04277 19.3048L5.37912 19.0103L5.33749 18.6914C5.30777 18.699 5.27758 18.7048 5.24702 18.7089L3.00321 19.0017Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M9.39648 17.0777V18.1918L11.7677 19.1075H11.77L14.1412 18.1918H14.147V17.0777C12.6679 17.8496 10.8867 17.8554 9.39648 17.0777Z"
                                            fill="#4671C6"
                                        />
                                        <path
                                            d="M9.39648 17.0777V18.1918L11.7677 19.1075H11.77L14.1412 18.1918H14.147V17.0777C12.6679 17.8496 10.8867 17.8554 9.39648 17.0777Z"
                                            fill="#F9CFCF"
                                        />
                                        <path
                                            d="M11.7699 19.2951C11.7467 19.2951 11.7216 19.2909 11.7 19.2826L9.32889 18.3668C9.25661 18.3389 9.20898 18.2694 9.20898 18.1919V17.0778C9.20898 17.0122 9.2432 16.9514 9.29927 16.9175C9.35542 16.8835 9.42508 16.8812 9.4832 16.9116C10.9161 17.6593 12.6271 17.6594 14.0602 16.9116C14.1183 16.8812 14.188 16.8834 14.2442 16.9175C14.3003 16.9515 14.3345 17.0122 14.3345 17.0778V18.1919C14.3345 18.2816 14.2715 18.3565 14.1874 18.3751L11.8375 19.2826C11.8158 19.2909 11.7929 19.2951 11.7699 19.2951ZM9.58389 18.0634L11.7686 18.9071L13.9594 18.0611V17.3774C12.5694 18.0043 10.9738 18.0043 9.58389 17.3774V18.0634Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M13.5978 21.2354C13.5951 21.2354 13.5923 21.2354 13.5895 21.2354C13.3825 21.2329 13.1888 21.1396 13.0578 20.9793L11.6262 19.2262C11.5883 19.1796 11.5749 19.1177 11.5902 19.0596C11.6056 19.0015 11.6479 18.9543 11.7039 18.9327L14.0752 18.017C14.0967 18.0087 14.1197 18.0045 14.1428 18.0045C14.251 18.0045 14.3547 18.0033 14.4546 18.0023C15.1061 17.9955 15.6201 17.9899 16.2432 18.2966C16.296 18.3226 16.3336 18.3718 16.3447 18.4295C16.3556 18.4873 16.3389 18.5469 16.2996 18.5906L14.124 20.9955C13.9944 21.1469 13.8019 21.2354 13.5978 21.2354ZM12.0804 19.1894L13.3483 20.7421C13.4089 20.8162 13.4984 20.8592 13.5939 20.8604C13.6889 20.8653 13.7802 20.8204 13.8424 20.7478L15.8459 18.5329C15.3997 18.3672 14.9922 18.3715 14.4585 18.3772C14.3681 18.3782 14.2748 18.3792 14.1777 18.3794L12.0804 19.1894Z"
                                            fill="#3762CC"
                                        />
                                        <path
                                            d="M9.94154 21.2354C9.73754 21.2354 9.54497 21.1468 9.41213 20.9916L7.23985 18.5906C7.20038 18.547 7.18369 18.4873 7.19475 18.4295C7.20582 18.3718 7.24341 18.3225 7.29619 18.2966C7.91597 17.9916 8.40413 17.9961 9.08082 18.0025C9.18113 18.0034 9.28604 18.0045 9.39675 18.0045C9.41991 18.0045 9.44279 18.0087 9.46435 18.017L11.8355 18.9327C11.8915 18.9543 11.9338 19.0015 11.9492 19.0596C11.9646 19.1177 11.9512 19.1796 11.9132 19.2262L10.4816 20.9792C10.3507 21.1396 10.1569 21.2329 9.94979 21.2354C9.94697 21.2354 9.94425 21.2354 9.94154 21.2354ZM7.69322 18.5326L9.69357 20.7438C9.75919 20.8203 9.84807 20.8621 9.94538 20.8603C10.0411 20.8591 10.1306 20.816 10.1911 20.742L11.4591 19.1893L9.36169 18.3793C9.2626 18.3791 9.1681 18.3782 9.07725 18.3774C8.52469 18.3724 8.13197 18.3686 7.69322 18.5326Z"
                                            fill="#3762CC"
                                        />
                                    </g>
                                    <defs>
                                        <clipPath id="clip0_20522_2234">
                                            <rect
                                                width="24"
                                                height="24"
                                                fill="white"
                                                transform="translate(0.726562)"
                                            />
                                        </clipPath>
                                    </defs>
                                </svg>
                                <span className="text-xl">
                                    {instructorsInfo?.instructorName}
                                </span>
                            </div>
                        </div>
                        <Input
                            type="search"
                            placeholder="Student Name, Email"
                            className="w-1/2 my-12"
                            onChange={handleSetSearch}
                        />
                    </div>
                    <div className="flex m-4">
                        <div className="flex items-center mx-4 text-sm">
                            <Dialog>
                                <DialogTrigger asChild>
                                    <button
                                        className="flex"
                                        onClick={toggleForm}
                                    >
                                        <Pencil size={18} className="mx-4" />
                                        Edit Batch
                                    </button>
                                </DialogTrigger>
                                <DialogContent>
                                    <DialogHeader>
                                        <DialogTitle>Update Batch</DialogTitle>
                                        <Form {...form}>
                                            <form
                                                onSubmit={form.handleSubmit(
                                                    onSubmit
                                                )}
                                                className="space-y-8"
                                            >
                                                <FormField
                                                    control={form.control}
                                                    name="name"
                                                    render={({ field }) => (
                                                        <FormItem>
                                                            <FormLabel>
                                                                Batch Name
                                                            </FormLabel>
                                                            <FormControl>
                                                                <Input
                                                                    placeholder="Batch Name"
                                                                    {...field}
                                                                />
                                                            </FormControl>

                                                            <FormMessage />
                                                        </FormItem>
                                                    )}
                                                />
                                                <FormField
                                                    control={form.control}
                                                    name="instructorId"
                                                    render={({ field }) => (
                                                        <FormItem>
                                                            <FormLabel>
                                                                Instructor Id
                                                            </FormLabel>
                                                            <FormControl>
                                                                <Input
                                                                    placeholder="Instructor Id"
                                                                    type="name"
                                                                    {...field}
                                                                />
                                                            </FormControl>
                                                            <FormMessage />
                                                        </FormItem>
                                                    )}
                                                />
                                                <FormField
                                                    control={form.control}
                                                    name="capEnrollment"
                                                    render={({ field }) => (
                                                        <FormItem>
                                                            <FormLabel>
                                                                Cap Enrollment
                                                            </FormLabel>
                                                            <FormControl>
                                                                <Input
                                                                    placeholder="Cap Enrollment"
                                                                    type="name"
                                                                    {...field}
                                                                />
                                                            </FormControl>
                                                            <FormMessage />
                                                        </FormItem>
                                                    )}
                                                />
                                                <FormDescription>
                                                    This form will Update the
                                                    batch info
                                                </FormDescription>
                                                <div className="w-full flex flex-col items-end gap-y-5 ">
                                                    <DialogClose asChild>
                                                        <Button
                                                            className="w-1/2"
                                                            type="submit"
                                                        >
                                                            Update batch
                                                        </Button>
                                                    </DialogClose>
                                                </div>
                                            </form>
                                        </Form>
                                    </DialogHeader>
                                </DialogContent>
                            </Dialog>
                        </div>
                        <div className="flex items-center text-sm">
                            <Trash2
                                onClick={() => setDeleteModalOpen(true)}
                                className="text-destructive cursor-pointer"
                                size={20}
                            ></Trash2>
                            <span
                                onClick={() => setDeleteModalOpen(true)}
                                className=" cursor-pointer ml-2"
                            >
                                Delete
                            </span>

                            <DeleteConfirmationModal
                                isOpen={isDeleteModalOpen}
                                onClose={() => setDeleteModalOpen(false)}
                                onConfirm={batchDeleteHandler}
                                modalText="Type the batch name to confirm deletion"
                                modalText2="Batch Name"
                                input={true}
                                buttonText="Delete Batch"
                                instructorInfo={instructorsInfo}
                            />
                        </div>
                    </div>
                </div>
                <DataTable columns={columns} data={studentsData} />

                <DataTablePagination
                    totalStudents={totalStudents}
                    position={position}
                    setPosition={setPosition}
                    pages={pages}
                    lastPage={lastPage}
                    currentPage={currentPage}
                    setCurrentPage={setCurrentPage}
                    fetchStudentData={fetchStudentData}
                    setOffset={setOffset}
                />
            </MaxWidthWrapper>
        </>
    )
}

export default BatchesInfo
